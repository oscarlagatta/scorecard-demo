// This file is auto-generated by @hey-api/openapi-ts

export const MetricDtoSchema = {
  type: 'object',
  properties: {
    id: {
      type: 'integer',
      format: 'int32',
    },
    name: {
      type: 'string',
      nullable: true,
    },
    description: {
      type: 'string',
      nullable: true,
    },
    timeStamp: {
      type: 'string',
      format: 'date-time',
    },
    metricTypeId: {
      type: 'integer',
      format: 'int32',
    },
    runFrequencyId: {
      type: 'integer',
      format: 'int32',
    },
    runDay: {
      type: 'string',
      nullable: true,
    },
    serviceAlignmentId: {
      type: 'integer',
      format: 'int32',
    },
    dataGranularityId: {
      type: 'integer',
      format: 'int32',
    },
    consequenceEligible: {
      type: 'boolean',
    },
    metricCalculation: {
      type: 'string',
      nullable: true,
    },
    valueType: {
      type: 'string',
      nullable: true,
    },
    additionalInformation: {
      type: 'string',
      nullable: true,
    },
    status: {
      type: 'string',
      nullable: true,
    },
    createdUserId: {
      type: 'integer',
      format: 'int32',
    },
    createdDateTime: {
      type: 'string',
      format: 'date-time',
    },
    updatedUserId: {
      type: 'integer',
      format: 'int32',
    },
    updatedDateTime: {
      type: 'string',
      format: 'date-time',
    },
  },
  additionalProperties: false,
} as const;

export const MetricForCreationDtoSchema = {
  required: ['metricPrefixId', 'name', 'status'],
  type: 'object',
  properties: {
    metricPrefixId: {
      maxLength: 500,
      minLength: 1,
      type: 'string',
    },
    name: {
      maxLength: 500,
      minLength: 1,
      type: 'string',
    },
    description: {
      maxLength: 4000,
      type: 'string',
      nullable: true,
    },
    metricTypeId: {
      type: 'integer',
      format: 'int32',
    },
    runFrequencyId: {
      type: 'integer',
      format: 'int32',
    },
    runDay: {
      type: 'string',
      nullable: true,
    },
    serviceAlignmentId: {
      type: 'integer',
      format: 'int32',
    },
    dataGranularityId: {
      type: 'integer',
      format: 'int32',
    },
    consequenceEligible: {
      type: 'boolean',
    },
    metricCalculation: {
      type: 'string',
      nullable: true,
    },
    valueType: {
      type: 'string',
      nullable: true,
    },
    additionalInformation: {
      type: 'string',
      nullable: true,
    },
    status: {
      maxLength: 50,
      minLength: 1,
      type: 'string',
    },
    createdUserId: {
      type: 'integer',
      format: 'int32',
    },
    createdDateTime: {
      type: 'string',
      format: 'date-time',
    },
    updatedUserId: {
      type: 'integer',
      format: 'int32',
    },
    updatedDateTime: {
      type: 'string',
      format: 'date-time',
    },
    metricOwnerId: {
      type: 'integer',
      format: 'int32',
    },
    metricAlignmentIdentifierId: {
      type: 'integer',
      format: 'int32',
    },
  },
  additionalProperties: false,
} as const;

export const MetricForUpdateDtoSchema = {
  required: ['metricPrefixId', 'name', 'status'],
  type: 'object',
  properties: {
    metricPrefixId: {
      maxLength: 500,
      minLength: 1,
      type: 'string',
    },
    name: {
      maxLength: 500,
      minLength: 1,
      type: 'string',
    },
    description: {
      maxLength: 4000,
      type: 'string',
      nullable: true,
    },
    metricTypeId: {
      type: 'integer',
      format: 'int32',
    },
    runFrequencyId: {
      type: 'integer',
      format: 'int32',
    },
    runDay: {
      type: 'string',
      nullable: true,
    },
    serviceAlignmentId: {
      type: 'integer',
      format: 'int32',
    },
    dataGranularityId: {
      type: 'integer',
      format: 'int32',
    },
    consequenceEligible: {
      type: 'boolean',
    },
    metricCalculation: {
      type: 'string',
      nullable: true,
    },
    valueType: {
      type: 'string',
      nullable: true,
    },
    additionalInformation: {
      type: 'string',
      nullable: true,
    },
    status: {
      maxLength: 50,
      minLength: 1,
      type: 'string',
    },
    createdUserId: {
      type: 'integer',
      format: 'int32',
    },
    createdDateTime: {
      type: 'string',
      format: 'date-time',
    },
    updatedUserId: {
      type: 'integer',
      format: 'int32',
    },
    updatedDateTime: {
      type: 'string',
      format: 'date-time',
    },
    metricOwnerId: {
      type: 'integer',
      format: 'int32',
    },
    metricAlignmentIdentifierId: {
      type: 'integer',
      format: 'int32',
    },
  },
  additionalProperties: false,
} as const;
